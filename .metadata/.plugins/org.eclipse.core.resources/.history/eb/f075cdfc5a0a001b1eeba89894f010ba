CPU mySystem {

  OS myOs {
    EE_OPT = "OS_EE_APPL_BUILD_DEBUG";
    EE_OPT = "OS_EE_BUILD_DEBUG";

    USERESSCHEDULER = FALSE;

	CPU_DATA = AVR8 {
		MULTI_STACK = TRUE;
		
		IDLEHOOK = TRUE {
			HOOKNAME = "idle_hook";
		};
	};

	MCU_DATA = MEGA {
	  MODEL = MEGA_328p;
	};

/*
    USEDYNAMICAPI = TRUE {
      TASK_ARRAY_SIZE		= 6;
      SN_ARRAY_SIZE		= 6;
      STACKS_MEMORY_SIZE	= 128;
    };
*/

    LIB = ARDUINO {
      /* Used to select Board: UNO or NANO */
      SDK_BOARD = NANO;
      /* Used to select vendor: CC or ORG */
      VARIANT = CC {
        VERSION = "1.8.5";
      };
      /* Create libarduino.a */
      STAND_ALONE = TRUE;
    };

    KERNEL_TYPE = OSEK {
      CLASS = ECC1;
    };
	
	STATUS = EXTENDED;
	STARTUPHOOK = TRUE;
	
  };

	APPDATA myApp {
		APP_SRC  = "code.cpp";
		APP_SRC  = "task.cpp";
		APP_SRC  = "hooks.cpp";
		APP_SRC  = "HelpfulSerial.cpp";
	};
	
	RESOURCE RES_PORTD_REG {
		RESOURCEPROPERTY = STANDARD;
	};
	
	EVENT EVT_LedTrigger {
		MASK = 0x1;
	};

	TASK Task0 {
		PRIORITY = 0x2;
		AUTOSTART = TRUE;
		SCHEDULE = FULL;
	};

	TASK Task1 {
		AUTOSTART = FALSE;
		PRIORITY = 1;
		RESOURCE = RES_PORTD_REG;
		EVENT = EVT_LedTrigger;
		STACK = PRIVATE {
			SIZE = 128;
		};
	};
	
	TASK Task2 {
		AUTOSTART = FALSE;
		PRIORITY = 1;
		RESOURCE = RES_PORTD_REG;
		EVENT = EVT_LedTrigger;
		STACK = PRIVATE {
			SIZE = 128;
		};
	};
	
	COUNTER SystemTimer {
   		MINCYCLE = 1;
   		MAXALLOWEDVALUE = 65535;
  	    TICKSPERBASE = 1;
   		TYPE = HARDWARE {
     		DEVICE = "TIMER1_COMPA";
     		SYSTEM_TIMER = TRUE;
   		};
   		SECONDSPERTICK = 0.001;
    };
  	
  	ALARM Alarm1 {
  		COUNTER = SystemTimer;
  		ACTION = SETEVENT {
  			TASK = Task1;
  			EVENT = EVT_LedTrigger;
  		};
  		AUTOSTART = TRUE {
  			CYCLETIME = 1000;
  			ALARMTIME = 1;
  		};
  	};
  	
  	ALARM Alarm2 {
  		COUNTER = SystemTimer;
  		ACTION = SETEVENT {
  			TASK = Task2;
  			EVENT = EVT_LedTrigger;
  		};
  		AUTOSTART = TRUE {
  			CYCLETIME = 2000;
  			ALARMTIME = 1;
  		};
  	};
  
};
